[ 동기화 ]

1. 멀티 스레드의 일반적인 모델
   1) 서로 다른 작업들을 하는 여러개의 스레드를 동시에 돌림
       - 알고리즘상으로 효율을 극대화할때 주로 사용

   2) 같은 작업을 하는 여러개의 스레드를 동시에 돌림
       - 특정 작업을 병렬적으로 수행해야 할 때 주로 사용

2. 멀티 스레드는 하드웨어 지원이 필요 : Job을 처리할 경우 CPU개수가 많아야 함
   - CPU 하나에서 1에서 100까지 합을 구하는 경우
      스레드 2개로 나눠서 작업을 하면??
      => 시간적, 효율적... 
           알고리즘적인 개선 효과...

3. 멀티 스레드에서의 자원이  동기화가 필요한 경우 
   ex) 전역변수 a의 값을 여러개의 스레드가 동시에 바꾸고자 할 경우
       int g_a;
       Thread()
	{
		g_a = GetA();
		g_a++;
		printf("%d", g_a;
	}
	4개의 스레드가 돈다고 가정??


4. 동기화 객체
	- user Object -      : 하나의 프로세스에서 다수의 스레드 동기화
1) CriticalSection 		
    => 임계영역 

	- kernel Object -    : 다수의 프로세스 동기화 가능.
2) Mutex			
    => CriticalSection과 동일한 개념 

3) Semaphore
    => 공유 자원에 접근할 수 있는 갯수를 지정, 지정한 갯수만이 접근 허용

4) Event
    => 스레드들간의 순차적인 흐름으로 진행되게 끔 event를 걸어줌.






























