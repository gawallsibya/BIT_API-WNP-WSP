//〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓
//  [ 보안 ]
//〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓〓


/*
//─────────────────────────────────────
  1. 보안이 필요한 이유 
//─────────────────────────────────────

시스템을 안전하게 유지 --> 
    원하지 않는 사용자가 시스템의 자원(파일, 프린터, 레지스트리..)을 
	마음대로 쓰지 못하도록 하는것 

NT가 지원하는 모델은 C2레벨까지 요구함..
  1) 시스템 자원을 사용자별로 허가 거부 가능
  2) 프로세스가 해제한 메모리의 내용을 읽을 수 없도록 보호 --> 
                                        NTFS 파일 시스템은 이를 지원
  3) 반드시 로그인 과정을 통해 신분 확인
  4) 관리자는 보안과 관련된 이벤트 감시 가능
  5) 운영체제 스스로 자신의 실행 코드를 보호할 수 있어야 함--> 
                                        누군가로 부터 커널 변경시 이를 거부 


*) 보안 등급 
   - NCSC(The National Computer Security Center) 에서 보안 등급을 제시
   - TCSEC(Trusted Computer System Evaluation Criteria) : 미국방성에서 사용되던 
      TCSEC에  기반을 두고 만들어짐

   등 급 		세부 내용
	A1		인증된 디자인			B3		보안 도메인
	B2		구조화된 보호			B1		분류된 보안 방지
	C2		접근 보호의 통제		c1		임의적인 접근 통제
	D		최소한의 보호


==> Windows NT는 보안 하부 시스템과 관련된 구성 요소들을 통해 이러한 
    필요 조건들에 부응

	보안 참조 모니터(Security reference monitor, SRM) : 개체에 대한 사용자 권한 조작
             --> Winnt\System32\Ntoskrnl.exe(windows 2000의 실행부)

    로컬 보안 감독 서브 시스템(Lsass, Local security authority subsystem) : 
       사용자들이 컴퓨터에 로그온 하는 것을 허용, 비밀번호, 
	   사용자와 사용그룹에 대한 권한 부여 
       보안 감사 메시지를 이벤트 로그로 보내는 일등을 담당
            --> Winnt\System32\Lsass.exe

    Lsass 정책 데이터 베이스 : 보안 정책의 조건을 담고 있다.
    로그온 시도를 인증할 수 있는 권한, 시스템에 접속할 수 있는 권한등의 정보 포함 
            --> HKLM\SECURITY 에 저장(레지스트리)

       1) 보안계정 관리자(SAM Security Accounts Manager) : 
           사용자 이름과 그룹을 담고 있는 데이터 베이스를 운영하는 책임 담당
            --> Lsass 프로세스에서 실행됨

       2) SAM 데이터 베이스 : 로컬 사용자들과 그룹들을 비밀번호와 다른 여러 가지 
             속성들에 따라 저장

       - 인증 패키지 : Lsass 문맥에서 실행, Windows NT의 인증 정책을 구현하는 DLL
          주어진 사용자 이름과 암호가 일치하는지를 점검하고 일치할 경우 신원 
          정보를 Lsass에 되돌려 줌(액세스 토큰 생성-사용자의 정보가 담겨있슴)



   

//─────────────────────────────────────
   2. User
//─────────────────────────────────────
	
   - SID : 보안 식별자 (Security Identifiers)
   
     Winodws NT를 설치할 때 설치 프로그램을 통해 컴퓨터에 SID를 도입함 로컬 
	 계정에 SID를 할당한다.
     사용자들마다 가지고 있다. 
       ex) s-1-5-21-1463437245-1224812800-863842198-1128
           수정 번호는 1
           식별자 권한 값은 5
           4개의 보조권한
           1나의 RID(1128)로 구성됨

   - RID : 사용자 그룹에 따라 1000부터 시작해서 1씩 증가하게 된다. 



//─────────────────────────────────────
   3. object : ACL(Acess Control List) : DACL(Discretionary..) , SACL(System..)
               ACE(Access Control Entry)
//─────────────────────────────────────
   - 보안 오브젝트 
      프로세스, 스레드, 파일, 동기화 객체....

   - security_attributes  sa;
     sa.nLength;
     sa.lpsecurityDescriptor; 	// 보안 설명자 
             NULL 로 주어 일반적 사용 : 오브젝트를 생성한 사용자와 같은 
			                            그룹에 속한 모든 사용자에게 
                                        모든 권한이 주어진다.
	 sa.bInheritHandle;


   - 보안 설명자 : 상세 내부는 공개되어 있지 않음...
     소유자의 SID, 소유자 그룹의 SID, DACL, SACL 등의 정보들로 구성되어 있다.
          소유자 : user1
          그  룹 : Administrators
          DACL   :  허가 User2 : read(ACE(Access Control Entry) 개별적인 보안 정보 
		                                                         조각의 배열
					허가 Group2 : read/write(ACE)
		            허가 User3 : read/write(ACE)
                    금지 User4 : write(ACE)

					*)ACE의 순서 중요...우선 순위...
	  
		  SACL   : 감사 정보 이벤트 로그 기록


  

//─────────────────────────────────────
  4. 보안 설명자
//─────────────────────────────────────

   - typedef struct _SECURITY_ATTRIBUTES{
	DWORD nLength;
	LPVOID lpSecurityDescriptor;
	BOOL hInheritHandle;
	}
     => 2번째 맴버가 보안의 핵심인 보안설명자이다.
        보통 NULL로 주어짐 --> 사용자와 같은 그룹에 속한 모든 사용자에게 모든 권한이 주어진다.

   - 보안 설명자 정보
     1) 소유자의 SID : 오브젝트를 소유하고 있는 사용자의 SID, 오브젝트에 대한 모든 권한을 가지고 있다.
     2) 소유자의 그룹 SID : 소유자가 속한 그룹의 ID, 큰 의미 없다.
     3) DACL 사용자별 권한 정보 : 누가 이 오브젝트를 읽을 수 있는지 또는 쓰기가 거부되는지등의 
	                              정보를 기억하고 있다. 핵심 부분
     4) SACL : 오브젝트를 액세스 할 때 기록할 감사 정보를 기억
	           누가 이 오브젝트에 대해 어떤 동작을 할 때 이벤트 로그에 기록을 남김

     ex) 소유자 : test
	     그룹   : Administrators
	     DACL   : User1은 이 파일을 읽을 수 있다.
		          User2는 이 파일을 읽고 쓸 수 있다.
		          Group1은 이 파일을 쓸 수 없다.
 	     SACL    : 감사정보 없슴


//─────────────────────────────────────
   5. SID : 보안 설정을 위해 로긴하는 모든 사용자를 구분할 수 있는 고유값
//─────────────────────────────────────

	 Security Identifires : 보안 식별자 --> 로긴하는 사용자나 그룹에 붙여주는 ID 
         버전, 도메인 정보, 사용자 정보등을 포함하고 있다. 이진 포멧으로 되어 있다.
         Win32 API 함수로 SID를 문자열로 변경하여 확인 가능 S-1-5-111-222로 표현됨

  
//─────────────────────────────────────
   6. 액세스 토큰
//─────────────────────────────────────

    - 사용자 신분에 대한 정보를 액세스 토큰이라함
    - 보안 설명자와 함께 NT 보안 체계를 구성하는 중요한 요소
    --> 보안 오브젝트가 허용되지 않는 사용자로부터 보호하기 위해서는 액세스하고자 
	    하는 사람의 신분에 대한 정보와 보안 설명자를 비교해야 함...

    로긴 과정 
    1) SAM의 사용자 계정 정보와 패스워드를 비교하여 허가 여부 체크
    2) 성공하면 사용자에게 액세스 토큰을 생성해줌 : 로긴한 사용자 정보가 들어있다.
    3) 사용자가 프로세스를 실행하면 이 프로세스는 사용자의 액세스 토큰과 동일한 사본을 부여받는다.
       이 프로세스를 통하여 보안 오브젝트를 액세스 하면 시스템은 
       프로세스의 액세스 토큰과 보안 오브젝트의 보안 설명자를 비교하여 액세스 권한이 있는지 판별


//─────────────────────────────────────
   7. ACL : ACL은(Access Control List)개별적인 보안 정보 조각인 
           ACE(Access Control Entry)의 배열이다.
//─────────────────────────────────────

   보안 설명자는 두개의 ACL을 가지고 있다.

   DACL(Discreionary ACL) : 액세스 권한 목록
   여러개의 ACE로 구성    : 각 ACE는 누가 이 오브젝트에 대해 어떤 권한을 가지는지에 
                            대한 정보 표현

ex) 
	허가  User1  읽기, 쓰기
	허가  User2  실행
	허가  User3  쓰기

   SACL(SyStem ACL) : 감사 기록


//─────────────────────────────────────
   9. 특권 (Token에는 user SID, group SID, 특권영역이 있다.)
//─────────────────────────────────────

   - 로컬 컴퓨터 운영에 관련된 특별한 작업을 할 수 있는 권한 , 시스템 전반적인 자원과 
     작업에 대한 권한  
	 보안 설명자는 특정 보안 오브텍트에 관한 권한 
    - 사용자와 그룹 계정에 부여된다.(보안 설명자 : 오브젝트에 부여)	
