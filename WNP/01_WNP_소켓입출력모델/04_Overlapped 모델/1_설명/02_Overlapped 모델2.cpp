/*********************************************************
  [ Overlapped 모델2 ]
**********************************************************/


/*********************************************************
	완료 루틴을 통해 비동기 입출력 결과를 처리한다.

	완료 루틴(Completion routine)이란 애플리케이션이 정의한
	일종의 콜백 함수로, 운영체제가 적절한 시점에 자동으로
	호출하도록 되어 있다.

  1. 동작 원리 
	 
	 (1) 비동기 입출력 함수를 호출함으로써 운영체제에 입출
	     력 작업을 요청한다.

     (2) 해당 스레드는 곧바로 alertable wait(슬립 상태에서 일하는 상태) 상태에 진입한다.
	     *)alertable wait : 비동기 입출력을 위한 특별한
		   대기상태로, 비동기 입출력 함수를 호출한 스레드가
		   이 상태에 있어야만 완료 루틴이 호출될 수 있다.

		  ex) 스레드를 alertable wait 상태로 만드는 함수들..
			WaitForSingleObject(), WaitForMultipleObject()
			SleepEx(), WSAWaitForMultipleEvents()...
//======================== 준비상태 ============================
		
	 (3) 비동기 입출력 작업이 완료되면, 운영체제는 스레드의
	     APC 큐에 결과를 저장한다.(자료구조)
		 *)APC 큐(Asynchronous Procedure Call Queue)
			비동기 입출력 결과 저장을 위해 운영체제가 각 스
			레드마다 할당하는 메모리 영역

     (4) 비동기 입출력 함수를 호출한 스레드가 alertable wait
	     상태에 있으면, 운영체제는 APPC 큐에 저장된 정보(
		 완료 루틴의 주소)를 참조하여 완료 루틴을 호출한다.
		 완료 루틴 내부에서는 데이터를 처리한 후 다시 비동기
		 입출력 함수를 호출할 수 있다.

	 (5) APC 큐에 저장된 정보를 토대로 모든 완료 루틴 호출이 
	     끝나면 스레드는 alertable wait 상태에서 빠져 나온다.
		 이 스레드가 비동기 입출력 결과를 계속 처리하려면 
		 다시 alertable wait 상태에 진입해야 한다.



  2. 소켓 입출력 모델 실행 순서 

	 (1) 비동기 입출력을 지원하는 소켓을 생성한다.

     (2) 비동기 입출력 함수를 호출한다.
	     이때 완료 루틴의 시작 주소를 함수 인자로 전달한다.
		 비동기 입출력 작업이 곧바로 완료되지 않으면, 소켓 함
		 수는 오류를 리턴하고 오류 코드는 WSA_IO_PENDING으로
		 설정된다.

	 (3) 비동기 입출력 함수를 호출한 스레드를 alertable wait
	     상태로 만든다.
		 앞에서 소개한 WaitForSingleObject(), WaitForMultiple-
		 Object(), SleepEx(), WSAWaitForMultipleEvents()
		 등의 함수 중에서 적절한 것을 선택하여 사용하면 된다.

	 (4) 비동기 입출력 작업이 완료되면, 운영체제는 완료루틴
	     을 호출한다. 완료 루틴에서는 비동기 입출력 결과를
		 확인하고 데이터를 처리한다.

	 (5) 완료 루틴 호출이 끝나면, 스레드는 alertable wait 상태
	     에서 빠져나온다.

     (6) 새로운 소켓을 생성하면 1 ~ 5 그렇지 않으면 2 ~ 5를
	     반복한다.



	void CALLBACK CompletionRoutine
	{
		DWORD		dwError,
		DWORD		cbTransferred,
		LPWSAOVERLAPPED	lpOverlapped,
		DWORD		dwFlags
	};

	- dwError
		비동기 입출력 결과를 나타낸다.
		오류가 발생하면 이 값은 0이 아닌값이 된다.

    - cbTransferred
		전송 바이트 수를 나타낸다.
		통신 상대가 접속을 종료하면 이 값은 0이 된다.

    - lpOverlapped
		비동기 입출력 함수 호출 시 넘겨준 WSAOVERLAPPED
		구조체의 주소값이 이 인자를 통해 다시 애플리
		케이션으로 넘어온다.
		Overlapped 모델(2)에서는 이벤트 객체를 사용하지 않
		으므로, WSAOVERLAPPED 구조체를 완료 루틴 내부에서 
		직접 사용할 일은 거의 없다.

    - dwFlags
		항상 0이므로 적어도 현재까지는 사용하지 않는다.


  
  3. Sample

	서버 동작 : 클라이언트가 보낸 데이터를 받아(WSARecv)
	            이를 문자열로 간주하여 무조건 화면에 출력
				그리고, 
				받은 문자열을 데이터 변경 없이 다시 클라이
				언트에 보낸다.(WSASend)

   클라이언트 동작 :
                사용자가 키보드로 입력한 문자열을 서버에
				보낸다.(WSASend)
				서버가 받은 데이터를 그대로 되돌려 보내면
				클라이언트는 이를 받아(WSARecv) 화면에 
				출력한다.					
		
**********************************************************/
